g.relationship(data-bind="svgcss: type")
	path(data-bind="d: path, id: pathID + 'def', bindElement: pathElement")

	// ko if: fromMultiplicity().length > 0
	text(data-bind="\
		text: fromMultiplicity,\
		x: fromMultiplicityX,\
		y: fromMultiplicityY\
	")
	// /ko
	
	// ko if: toMultiplicity().length > 0
	text(data-bind="\
		text: toMultiplicity,\
		x: toMultiplicityX,\
		y: toMultiplicityY\
	")
	// /ko

	// ko if: fromIndicator().length > 0
	text(dy="-5"): textpath.from-indicator(data-bind="\
		xlinkhref: '#' + pathID + pathMode(),\
		text: fromIndicator,\
		startOffset: fromOffset,\
		style: { 'text-anchor': pathMode() === 'def' ? 'start' : 'end' }\
	")
	// /ko

	// ko if: toIndicator().length > 0
	text(dy="6"): textpath.to-indicator(data-bind="\
		xlinkhref: '#' + pathID + pathMode(),\
		text: toIndicator,\
		startOffset: toOffset,\
		style: { 'text-anchor': pathMode() === 'rev' ? 'start' : 'end' }\
	")
	// /ko

	g.tip(data-bind="transform: tipTransform")
		// ko template: { name: type() + '-tip-tmpl' }
		// /ko

g.relationship-zone(data-bind="svgcss: { chosen: isChosen }")
	path(data-bind="d: reversedPath, id: pathID + 'rev'")
	g.tip(data-bind="transform: tipTransform")
		// ko template: { name: type() + '-tip-tmpl' }
		// /ko