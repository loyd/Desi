@stroke-width   : 0.2mm;
@btn-size       : 45px;
@relation-zone  : 10;

@import "utils";

.class-diagram {

	svg {
		width  : 100%;
		height : 100%;

		background-clip   : border-box;
		background-image  : url(../imgs/class_diagram_bg.svg);
		background-repeat : repeat;
		background-color  : white;

		text {
			font-family : Consolas monospace;
		}
	}

	.essential {
		cursor : default;
		
		text {
			cursor : inherit;
		}

		.border {
			stroke : black;
			stroke-width : @stroke-width;
		}

		.header {
			text {
				text-anchor        : middle;
				alignment-baseline : middle;
				font-size : 14px;
			}
		}

		&.moved {
			cursor : move;
			stroke-dasharray : 1, 2;

			text {
				stroke : black;
				fill   : none;
				stroke-width : 1;
			}
		}

		&.chosen {
			.border {
				stroke-width : @stroke-width * 2;
			}

			.section-separator {
				stroke-width : @stroke-width * 2;
			}

			.element-separator {
				stroke-width : @stroke-width;
			}
		}

		.member text {
			alignment-baseline : middle;
			font-size : 10px;
		}

		.member.static text.name {
			text-decoration : underline;
		}

		.section-separator, .element-separator {
			stroke : black;
		}

		.section-separator {
			stroke-width : @stroke-width;
		}

		.element-separator {
			stroke-width : @stroke-width / 2;
		}
	}

	hr {
		margin : 10px 0;
	}

	
	input, select {
		margin-top    : 0;
		margin-bottom : 0;
	}

	.control-menu {
		@diff : -@btn-size / 2;

		.btn-rm-essential {
			top  : @diff;
			left : @diff;
		}

		.btn-edit-essential {
			top   : @diff;
			right : @diff;
		}

		.btn-color-essential {
			bottom : @diff;
			left   : @diff;
		}

		.btn-link-essential {
			bottom : @diff;
			left   : 50%;

			margin-left : -@btn-size / 2;
		}
	}

	.creating-menu {
		width  : 0;
		height : 0;

		@diff : -@btn-size * 1.5;

		.btn-make-class {
			left : 0;
			top  : @diff;

			margin-left : -@btn-size / 2;
		}

		.btn-make-interface {
			right  : @diff * 1.2;
			bottom : @diff;
		}

		.btn-make-note {
			left   : @diff * 1.2;
			bottom : @diff;
		}
	}

	.control-menu, .creating-menu {
		position   : absolute;
		background : none;

		.btn {
			border-radius : 50%;
			position : absolute;
			width    : @btn-size;
			height   : @btn-size;
			padding  : 0;
		}
	}

	.popover {
		display    : block;
		max-height : 100%;
	}

	.fade {
		visibility : hidden;
	}

	.fade.in {
		visibility : visible;
	}

	.essential-menu {
		width : 335px;

		.class-name {
			display : block;
			width   : 230px;
			margin  : auto;
			text-align : center;
		}

		.colors {
			text-align : center;

			.color {
				display : inline-block;
				width   : 15px;
				height  : 15px;
				margin  : 3px;
				border  : 1px solid;
				border-radius : 15%;
			}

			.active-color {
				border-width : 2px;
			}
		}

		.attribute, .operation {
			margin-bottom : 10px;

			.btn {
				width   : 32px;
				height  : 32px;
				padding : 0;
			}
		}

		.visibility {
			width : 45px;
		}

		.name {
			width : 100px;
		}

		.operations {
			.name {
				width : 78px;
			}

			.type {
				width : 40px;
			}

			.params, .btn-add-param {
				margin-left : 49px;
			}
		}

		.param-name {
			width : 90px;
		}

		.param-type {
			width : 60px;
		}

		.type {
			width : 50px;
		}
	}

	.relationship-menu {
		width : 284px;

		.types .btn, .rm-relationship {
			width   : 32px;
			height  : 32px;
			padding : 0;
		}

		.rm-relationship {
			float : left;
			margin-right : 10px;
		}

		.multiplicity {
			width : 66px;
		}

		.indicator {
			width : 170px;
		}
	}

	.relationship {
		stroke : black;
		stroke-width : 1px;
		fill : none;

		text {
			text-anchor        : middle;
			alignment-baseline : middle;
			font-size : 8px;
			fill : black;
			stroke : none;
			font-weight : bold;
		}

		.to-indicator {
			alignment-baseline : hanging;
		}
	}

	.aggregation .tip, .generalization .tip, .realization .tip {
		fill : white;
	}

	.composition .tip {
		fill : black;
	}

	.realization, .dependency {
		stroke-dasharray : 3, 3;

		.tip {
			stroke-dasharray : none;
		}
	}

	.relationship-zone {
		stroke-width : @relation-zone;
		fill    : none;
		stroke  : black;
		opacity : 0;

		.transition(opacity 0.3s);

		&.chosen {
			opacity : .1;
		}
	}

	.fake {
		stroke : gray !important;
		fill : gray !important;
		stroke-dasharray : 3, 3;
	}
}